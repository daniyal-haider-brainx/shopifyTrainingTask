

{% style %}
  .product-form__submit {
    min-width: calc(15.8rem + var(--buttons-border-width) * 2) !important;
    font-weight:bold;
  }
  .tab-content {
    margin-top: 118px !important;
    font-size: 20px;
    margin-top: 68px;
    width: 100%;
    max-width: 1370px;
    align-content: center;
    display: flex;
    justify-content: center;
    text-align: center;
    margin: auto;
    color:#b5b5b5;
    line-height: 1.5;
  }
  .nav-tabs {
    margin-top: 80px !important;
    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: 105px;
    list-style: none;
    list-style-position: outside;
    font-size: 20px;
    cursor: pointer;
    position: relative;
  }
    .product-icon-list,.collection-icon-list,.seal-review-widget
    {
      display: none !important;
    }
    #vstar-reviews .grid-review 
    {
      position: relative !important;
      margin-bottom: 25px;
      width: 100%;
      left:6px;
    }
  .nav-tabs::after {
    content: '';
    position: absolute;
    bottom: 4px;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    border-bottom: 1px solid #b5b5b5;
  }
  .tab-link {
    text-align: center;
    width: 213px;
    color: #7F7F7F !important;
    font-weight: bold !important;
  }
  li.tab-link.active {
    font-weight: bold !important;
    color: #000000 !important;
    border-bottom: 1px solid #0aa1bc;
    font-weight:bold;
    text-align: center;
  }
=
  #vstar-reviews #reviews-body
  {
    right:36px;
  }
  /* Optional: Adjust padding or margin to create space for the border */
  .nav-tabs {
    padding-bottom: 5px; /* Adjust as needed */
  }
  @media screen and (max-width: 749px) {
    .grid-review 
    {
      max-width:270px !important;
    }
    .related-products 
    {
      margin-top:100px;
    }
    .nav-tabs { 
      column-gap:0px !important; 
      font-size: 14px;
      align-items:flex-end;
      margin-top: 15px !important;   
  }
  .tab-content 
  {
  font-size:14px;
  margin-top:20px !important;
  padding-right: 30px;
   padding-left: 30px;
  }

  .tab-link
  {
    width:97px !important;
  }
  .grid-review {
    flex-direction: column; /* Stack items in a single column */
    align-items: stretch; /* Stretch items to full width */
  }

  .column1 {
    flex: none; /* Reset flex property for individual items */
    width: 100%; /* Make each item take the full width */
    /* Add any other styles for mobile view here */
  }
  }
{% endstyle %}
{%- if product.description != blank -%}
  <div class="product__description rte quick-add-hidden" {{ block.shopify_attributes }}>
    {% assign description_parts = product.description | split: '---' %}
    {% assign part_size = description_parts.size | divided_by: 3 %}
    {% assign part1 = description_parts | slice: 0, part_size | join: ' ' %}
    {% assign part2 = description_parts | slice: part_size, part_size | join: ' ' %}
    <ul class="nav-tabs">
      <li class="tab-link active" data-tab="tab1">Description</li>
      <li class="tab-link" data-tab="tab2">Additional information</li>
      <li class="tab-link" data-tab="tab3">Reviews</li>
    </ul>

    <div id="tab1" class="tab-content active">{{ part1 }}</div>
    <div id="tab2" class="tab-content">{{ part2 }}</div>
    <div id="tab3" class="tab-content">
      {% for block in section.blocks %}
          <div class="product-single__box__block product-single__box__block--{{ block.type }}" {{ block.shopify_attributes }}>
            {% render block %}
          </div>
      {% endfor %}
      
    </div>
     <script defer>
      document.addEventListener('DOMContentLoaded', function () {
        function showTabContent(tabId) {
          const tabContents = document.querySelectorAll('.tab-content');
          for (const content of tabContents) {
            content.style.display = 'none';
          }
    
          const tabLinks = document.querySelectorAll('.tab-link');
          for (const link of tabLinks) {
            link.classList.remove('active');
          }
    
          const selectedTab = document.getElementById(tabId);
          const selectedTabLink = document.querySelector(`[data-tab="${tabId}"]`);
          if (selectedTab && selectedTabLink) {
            selectedTab.style.display = 'block';
            selectedTabLink.classList.add('active');
          }
        }
    
        const tabLinks = document.querySelectorAll('.tab-link');
        for (const link of tabLinks) {
          link.addEventListener('click', function () {
            const tabId = this.getAttribute('data-tab');
            showTabContent(tabId);
          });
        }
    
        showTabContent('tab1');
      });
    </script>
    
{%- endif -%}
{% schema %}
  {
    "name": "multirow",
    "settings": [],
    "blocks": [
      {
        "type": "@app"
      }
    ],
    "presets": [
      {
        "name": "multirow"
      }
    ]
  }
{% endschema %}